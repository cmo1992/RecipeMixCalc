/*
 * TODO: add up the percentages so user can see that they have a 100% recipe
 */
package AppInterface;

import DbAccessObj.*;
import DatabaseObj.Company;
import DatabaseObj.IngTorec;
import DatabaseObj.Ingredients;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 * 
 * @author cmo
 */
public class FrmRecipe extends javax.swing.JFrame {

    private FrmMenu frmMenu;
    private int index = 0;
    private int recipeIndex, companyIndex, recipeNameIndex;
    private String recipeName, companyName;

    /**
     * Creates new form frmResipe
     */
    public FrmRecipe() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        cboIng = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        txtPer = new javax.swing.JTextField();
        btnIng = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        btnAdd = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        cboCom = new javax.swing.JComboBox();
        txtRname = new javax.swing.JTextField();
        lblIndex = new javax.swing.JLabel();
        btnAddrecipeName = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel1.setText("Add Recipe");

        jLabel2.setText("Recipe Name:");

        jLabel3.setText("Company For:");

        jLabel4.setText("Ingredient:");

        jLabel5.setText("Percentage in Mix:");

        txtPer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPerActionPerformed(evt);
            }
        });

        btnIng.setText("Add to Recipe");
        btnIng.setToolTipText("");
        btnIng.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngActionPerformed(evt);
            }
        });

        btnAdd.setText("Add Recipe");
        btnAdd.setToolTipText("");

        btnBack.setText("Back");
        btnBack.setToolTipText("");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnAddrecipeName.setText("Click to Proseed");
        btnAddrecipeName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddrecipeNameActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item #", "Ingredients", "Percentage"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtRname, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboCom, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnAddrecipeName, javax.swing.GroupLayout.PREFERRED_SIZE, 140, Short.MAX_VALUE)
                                    .addComponent(lblIndex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboIng, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPer)))
                        .addGap(111, 111, 111)
                        .addComponent(btnIng, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRname, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblIndex, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cboCom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAddrecipeName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboIng, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnIng)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txtPer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnBack))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

   private void btnIngActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngActionPerformed
       IngTorecDAO r = new IngTorecDAO();
       IngredientsDAO i = new IngredientsDAO();
       ArrayList<Ingredients> ing;
       float per = Float.parseFloat(txtPer.getText());
       String ingr = cboIng.getItemAt(cboIng.getSelectedIndex()).toString();

       try {
           ing = i.getindx(ingr);
           r.insertIng(recipeIndex, ing.get(0).getIngpk(), per);
           loadtable();
       } catch (SQLException ex) {
           Logger.getLogger(FrmRecipe.class.getName()).log(Level.SEVERE, null, ex);
       }

   }//GEN-LAST:event_btnIngActionPerformed

   private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
       frmMenu.setVisible(true);
       this.setVisible(false);
   }//GEN-LAST:event_btnBackActionPerformed

   private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
       cboCom.removeAllItems();
       cboIng.removeAllItems();
       CompanyDAO comdao = new CompanyDAO();
       IngredientsDAO ingdao = new IngredientsDAO();
       ArrayList<Company> myComList = new ArrayList<Company>();
       ArrayList<Ingredients> myIngList = new ArrayList<Ingredients>();
       try {
           for (Object em : (ArrayList) comdao.getList()) {
               myComList.add((Company) em);
           }
           for (Object im : (ArrayList) ingdao.getList()) {
               myIngList.add((Ingredients) im);
           }
       } catch (SQLException ex) {
           //Logger.getLogger(this.class.getName()).log(Level.SERVER, null, ex);
       }
       if (myComList.size() > 0) {
           for (int i = 0; i < myComList.size(); i++) {
               Company hashmap = myComList.get(i);
               cboCom.addItem(hashmap.getComname());
           }

       }
       if (myIngList.size() > 0) {
           for (int i = 0; i < myIngList.size(); i++) {
               Ingredients hashmap = myIngList.get(i);
               cboIng.addItem(hashmap.getIngredient());
           }

       }
//       try {
//           ingdao.getList();
//           comdao.getList();
//       } catch (SQLException ex) {
//           //Logger.getLogger(this.class.getName()).log(Level.SERVER, null, ex);
//       }

   }//GEN-LAST:event_formWindowActivated

   private void btnAddrecipeNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddrecipeNameActionPerformed
       recipeName = txtRname.getText();
       companyName = cboCom.getItemAt(cboCom.getSelectedIndex()).toString();

       RecipesDAO rd = new RecipesDAO();
       CompanyDAO cd = new CompanyDAO();
       RectocomDAO td = new RectocomDAO();
       try {
           if (rd.Checkdb(recipeName)) {
               rd.insertRec(recipeName);
               System.out.println("Inserted Recipe");
               recipeNameIndex = rd.getindx(recipeName);
               System.out.println(recipeNameIndex + " == " + recipeName);

               companyIndex = cd.getindx(companyName);
               System.out.println(companyIndex + " == " + companyName);

               if (td.Checkdb(recipeNameIndex, companyIndex)) {
                   td.insertRec(recipeNameIndex, companyIndex);
                   recipeIndex = td.getindx(recipeNameIndex, companyIndex);
                   lblIndex.setText(String.valueOf(recipeIndex));
               } else {
                   System.out.println("ERROR...Recipe already exists in the database.");
               }
           } else {
               System.out.println("ERROR...Recipe Name is already in the database.");
           }
       } catch (SQLException ex) {
           Logger.getLogger(FrmRecipe.class.getName()).log(Level.SEVERE, null, ex);
       }
   }//GEN-LAST:event_btnAddrecipeNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRecipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRecipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRecipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRecipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmRecipe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAddrecipeName;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnIng;
    private javax.swing.JComboBox cboCom;
    private javax.swing.JComboBox cboIng;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lblIndex;
    private javax.swing.JTextField txtPer;
    private javax.swing.JTextField txtRname;
    // End of variables declaration//GEN-END:variables
/**
     * @Method: getCreds
     * @Detail: This get the current user information and a reference to the
     * Menu form from the Menu form
     * @param inUserName
     * @param inFrmMenu
     */
    void getCreds(FrmMenu inFrmMenu) {
        frmMenu = inFrmMenu;
    }

    private void loadtable() {
        IngTorecDAO itr = new IngTorecDAO();
        ArrayList<IngTorec> myList = new ArrayList<IngTorec>();
        try {
            for (Object em : (ArrayList) itr.getRecipe(recipeIndex)) {
                myList.add((IngTorec) em);
            }
        } catch (SQLException ex) {
            //Logger.getLogger(this.class.getName()).log(Level.SERVEr, null, ex);
        }
        DefaultTableModel amod = new DefaultTableModel();
        Object[] tableColumnNames = new Object[3];
        tableColumnNames[0] = "Item No";
        tableColumnNames[1] = "Ingredients";
        tableColumnNames[2] = "Percentage";
        amod.setColumnIdentifiers(tableColumnNames);
        Object[] obj = new Object[3];
        if (myList.size() > 0) {
            for (int t = 0; t < myList.size(); t++) {
                IngredientsDAO u = new IngredientsDAO();
                IngTorec a = myList.get(t);
                obj[0] = t;
                try {
                    obj[1] = u.getingr(a.getIngpk());
                } catch (SQLException ex) {
                    //Logger.getLogger(FrmRecipe.class.getName()).log(Level.SEVERE, null, ex);
                }
                obj[2] = a.getPercentage();
                amod.addRow(obj);
            }
            this.jTable2.setModel(amod);
        }
    }
}
